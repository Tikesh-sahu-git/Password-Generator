:root {
    --primary-color: #6366f1;
    --primary-hover: #4f46e5;
    --secondary-color: #f9fafb;
    --accent-color: #e0e7ff;
    --light-color: #ffffff;
    --dark-color: #1f2937;
    --text-color: #374151;
    --border-color: #e5e7eb;
    --success-color: #10b981;
    --warning-color: #f59e0b;
    --danger-color: #ef4444;
    --info-color: #3b82f6;
    --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    --radius-sm: 0.375rem;
    --radius-md: 0.5rem;
    --radius-lg: 0.75rem;
    --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    line-height: 1.5;
    background-color: #f3f4f6;
    color: var(--text-color);
    padding: 2rem;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

.container {
    width: 100%;
    max-width: 28rem;
    background-color: var(--light-color);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-lg);
    padding: 2rem;
    border: 1px solid var(--border-color);
    animation: fadeIn 0.6s ease-out;
    transform-origin: center;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

header {
    text-align: center;
    margin-bottom: 1.5rem;
    animation: slideIn 0.5s ease-out 0.1s both;
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

h1 {
    color: var(--dark-color);
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    letter-spacing: -0.025em;
}

.subtitle {
    color: #6b7280;
    font-size: 0.875rem;
    font-weight: 400;
}

.password-display {
    position: relative;
    margin-bottom: 1.5rem;
    animation: fadeInUp 0.5s ease-out 0.2s both;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(15px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

#password {
    width: 100%;
    padding: 0.875rem 1rem;
    font-size: 1rem;
    font-family: 'SF Mono', 'Roboto Mono', monospace;
    border: 1px solid var(--border-color);
    border-radius: var(--radius-md);
    background-color: var(--secondary-color);
    color: var(--dark-color);
    margin-bottom: 0.5rem;
    text-align: center;
    letter-spacing: 0.05em;
    transition: var(--transition);
    box-shadow: var(--shadow-sm);
}

#password:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
    transform: scale(1.01);
}

.copy-btn {
    position: absolute;
    right: 0.5rem;
    top: 0.5rem;
    background-color: var(--primary-color);
    color: white;
    border: none;
    padding: 0.375rem 0.75rem;
    border-radius: var(--radius-sm);
    cursor: pointer;
    transition: var(--transition);
    font-size: 0.75rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    box-shadow: var(--shadow-sm);
}

.copy-btn:hover {
    background-color: var(--primary-hover);
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
}

.copy-btn:active {
    transform: translateY(1px);
}

.copy-btn.copied {
    background-color: var(--success-color);
    animation: bounce 0.5s;
}

@keyframes bounce {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-5px);
    }
}

.controls {
    margin-bottom: 1.5rem;
    animation: fadeInUp 0.5s ease-out 0.3s both;
}

.control-group {
    margin-bottom: 1.25rem;
    transition: var(--transition);
}

.control-group:hover {
    transform: translateX(3px);
}

label {
    display: block;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--dark-color);
}

.range-container {
    display: flex;
    align-items: center;
    gap: 1rem;
}

input[type="range"] {
    flex-grow: 1;
    -webkit-appearance: none;
    height: 0.375rem;
    background: #e5e7eb;
    border-radius: 0.375rem;
    background-image: linear-gradient(var(--primary-color), var(--primary-color));
    background-size: 50% 100%;
    background-repeat: no-repeat;
    transition: var(--transition);
}

input[type="range"]:hover {
    transform: scaleY(1.3);
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: 1rem;
    width: 1rem;
    border-radius: 50%;
    background: var(--primary-color);
    cursor: pointer;
    box-shadow: 0 0 2px 0 rgba(0,0,0,0.1);
    transition: var(--transition);
}

input[type="range"]::-webkit-slider-thumb:hover {
    transform: scale(1.2);
    box-shadow: 0 0 5px 0 rgba(99, 102, 241, 0.5);
}

.range-value {
    font-weight: 600;
    min-width: 2rem;
    text-align: center;
    color: var(--primary-color);
    transition: var(--transition);
}

.range-value:hover {
    transform: scale(1.2);
}

.checkbox-group {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

.checkbox-container {
    display: flex;
    align-items: center;
    position: relative;
    cursor: pointer;
    transition: var(--transition);
}

.checkbox-container:hover {
    transform: translateY(-2px);
}

.checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.checkmark {
    position: relative;
    height: 1rem;
    width: 1rem;
    background-color: white;
    border: 1px solid var(--border-color);
    border-radius: var(--radius-sm);
    margin-right: 0.5rem;
    transition: var(--transition);
}

.checkbox-container:hover input ~ .checkmark {
    border-color: var(--primary-color);
    transform: rotate(5deg);
}

.checkbox-container input:checked ~ .checkmark {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    animation: checkmarkPop 0.3s;
}

@keyframes checkmarkPop {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.2);
    }
    100% {
        transform: scale(1);
    }
}

.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

.checkbox-container input:checked ~ .checkmark:after {
    display: block;
    animation: checkmarkDraw 0.3s;
}

@keyframes checkmarkDraw {
    from {
        transform: scale(0) rotate(45deg);
        opacity: 0;
    }
    to {
        transform: scale(1) rotate(45deg);
        opacity: 1;
    }
}

.checkbox-container .checkmark:after {
    left: 0.3125rem;
    top: 0.125rem;
    width: 0.1875rem;
    height: 0.4375rem;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
}

.strength-meter {
    height: 0.375rem;
    background-color: var(--border-color);
    border-radius: var(--radius-sm);
    margin-top: 0.5rem;
    overflow: hidden;
}

.strength-bar {
    height: 100%;
    width: 0%;
    transition: var(--transition);
}

.strength-label {
    font-size: 0.75rem;
    margin-top: 0.25rem;
    text-align: right;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: var(--transition);
}

.generate-btn {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    padding: 0.75rem 1rem;
    background-color: var(--primary-color);
    color: white;
    border: none;
    border-radius: var(--radius-md);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: var(--transition);
    margin-bottom: 1.5rem;
    animation: fadeInUp 0.5s ease-out 0.4s both;
}

.generate-btn:hover {
    background-color: var(--primary-hover);
    box-shadow: var(--shadow-md);
    transform: translateY(-2px);
}

.generate-btn:active {
    transform: translateY(1px);
}

.generate-btn:focus {
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0% {
        box-shadow: 0 0 0 0 rgba(99, 102, 241, 0.4);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(99, 102, 241, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(99, 102, 241, 0);
    }
}

.tips {
    padding: 1rem;
    background-color: var(--secondary-color);
    border-radius: var(--radius-md);
    border: 1px solid var(--border-color);
    animation: fadeInUp 0.5s ease-out 0.5s both;
}

.tips h2 {
    color: var(--dark-color);
    font-size: 0.875rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.tips h2:before {
    content: "ðŸ’¡";
    animation: float 3s ease-in-out infinite;
}

@keyframes float {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-5px);
    }
}

.tips ul {
    padding-left: 1.25rem;
    font-size: 0.8125rem;
    color: #6b7280;
}

.tips li {
    margin-bottom: 0.5rem;
    line-height: 1.4;
    position: relative;
    transition: var(--transition);
}

.tips li:hover {
    color: var(--dark-color);
    transform: translateX(5px);
}

.tips li:before {
    content: "â†’";
    position: absolute;
    left: -1rem;
    opacity: 0;
    transition: var(--transition);
}

.tips li:hover:before {
    opacity: 1;
    left: -1.25rem;
    color: var(--primary-color);
}

/* Password generation animation */
@keyframes passwordGen {
    0% {
        opacity: 0.5;
        letter-spacing: 0.2em;
    }
    100% {
        opacity: 1;
        letter-spacing: 0.05em;
    }
}

.password-animate {
    animation: passwordGen 0.3s ease-out;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.spin {
    animation: spin 1s linear infinite;
}

@media (max-width: 640px) {
    body {
        padding: 1rem;
    }
    
    .container {
        padding: 1.5rem;
        animation: fadeInMobile 0.6s ease-out;
    }

    @keyframes fadeInMobile {
        from {
            opacity: 0;
            transform: scale(0.98);
        }
        to {
            opacity: 1;
            transform: scale(1);
        }
    }
    
    .checkbox-group {
        flex-direction: column;
        gap: 0.75rem;
    }
}